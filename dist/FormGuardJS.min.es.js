/**
 * FormGuardJS - A lightweight form validation library
 * 
 * FormGuardJS.min.es.js
 * 
 * Version: 1.1.2
 *
 * Copyright (c) 2024 Jishith MP
 * 
 * This software is released under the MIT License.
 * 
 * Author: Jishith MP
 * License: MIT
 */
const styles=document.createElement("style");styles.innerHTML="\n    .formGuard_error-message {\n        color: red;\n        font-size: 0.9em;\n        margin-bottom: 10px;\n    }\n    .formGuard_error-field {\n        border-color: red;\n    }\n",document.head.insertBefore(styles,document.head.firstChild);export default class FormGuard{constructor(r,e={}){if(this.form=r,this.options=e,this.errors={},this.handleSubmit=this.handleSubmit.bind(this),!this.options.onSubmit||"function"!=typeof this.options.onSubmit)throw new Error("The `onSubmit` callback is required and must be a function.");this.initialize()}async initialize(){this.form.addEventListener("submit",this.handleSubmit)}async handleSubmit(r){try{this.clearErrorMessages();const e=this.form.querySelectorAll("input, textarea");let t=!0;if(e.forEach((r=>{r.name||(t=!1)})),this.init(),!t||Object.keys(this.errors).length>0)return void r.preventDefault();await this.options.onSubmit(new FormData(this.form),r)}catch(r){}}async init(){this.clearErrors();const r=this.form.querySelectorAll("input, textarea"),e=Array.from(r).map((async r=>{let e={};try{const t=r.dataset.rules;if(t)if(t.trim().startsWith("{"))e=JSON.parse(t);else if(t.trim().startsWith("https://"))try{const r=await fetch(t);e=await r.json()||{}}catch(r){}else if(/^[a-zA-Z0-9/_-]+(\.[a-zA-Z0-9]+)?$/.test(t))try{const r=await fetch(t);e=await r.json()||{}}catch(r){}if(e=e||{},r.dataset.rules,e.required&&!r.value.trim()&&(this.addError(r,e.messages?.required||"This field is required"),this.applyErrorStyle(r)),"number"===r.type&&""!==r.value.trim()&&(e.min&&r.value<e.min&&(this.addError(r,e.messages?.min||`Minimum value is ${e.min}`),this.applyErrorStyle(r)),e.max&&r.value>e.max&&(this.addError(r,e.messages?.max||`Maximum value is ${e.max}`),this.applyErrorStyle(r))),"email"===r.type){const t=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;!0!==e.required||r.value.trim()?""===r.value.trim()||t.test(r.value)||(this.addError(r,e.messages?.invalid||"Please enter a valid email address"),this.applyErrorStyle(r)):(this.addError(r,e.messages?.required||"Email is required"),this.applyErrorStyle(r))}if("password"===r.type&&this.validatePassword(r,e.password||{}),"checkbox"===r.type&&e.required){const t=this.form.querySelectorAll(`input[name="${r.name}"]`);Array.from(t).some((r=>r.checked))||(this.addError(r,e.messages?.required||"At least one option must be selected"),this.applyErrorStyle(r))}if("text"===r.type||"textarea"===r.tagName.toLowerCase()){const t=e.minLength||null,s=e.maxLength||null;""!==r.value.trim()&&(t&&r.value.length<t&&(this.addError(r,e.messages?.minLength||`Must be at least ${t} characters`),this.applyErrorStyle(r)),s&&r.value.length>s&&(this.addError(r,e.messages?.maxLength||`Must be no more than ${s} characters`),this.applyErrorStyle(r)))}if("tel"===r.type){const e=/^[0-9]{10}$/;r.value.trim()&&!e.test(r.value)&&(this.addError(r,"Please enter a valid phone number"),this.applyErrorStyle(r))}if("file"===r.type&&0===r.files.length&&e.required&&(this.addError(r,"Please select a file"),this.applyErrorStyle(r)),"range"===r.type&&(r.value<e.min||r.value>e.max)&&(this.addError(r,`Value must be between ${e.min} and ${e.max}`),this.applyErrorStyle(r)),"time"===r.type&&e.required&&!r.value.trim()&&(this.addError(r,"Time is required"),this.applyErrorStyle(r)),e.pattern&&r.value.trim())try{new RegExp(e.pattern).test(r.value)||(this.addError(r,e.messages?.pattern||"Invalid format"),this.applyErrorStyle(r))}catch(e){this.addError(r,"Invalid format"),this.applyErrorStyle(r)}if(e.match){const t=document.querySelector(`[name="${e.match}"]`);t&&r.value!==t.value&&(this.addError(r,e.messages?.match||"Fields do not match"),this.applyErrorStyle(r))}if("url"===r.type){const t=/^(ftp|http|https):\/\/[^ "]+$/;!0!==e.required||r.value.trim()?""===r.value.trim()||t.test(r.value)||(this.addError(r,e.messages?.invalid||"Please enter a valid URL"),this.applyErrorStyle(r)):(this.addError(r,e.messages?.required||"URL is required"),this.applyErrorStyle(r))}if("radio"===r.type&&e.required){const t=this.form.querySelectorAll(`input[name="${r.name}"]`);Array.from(t).some((r=>r.checked))||(this.addError(r,e.messages?.required||"Please select an option"),this.applyErrorStyle(r))}}catch(r){}}));await Promise.all(e),this.showErrors()}validatePassword(r,e){const{minLength:t=8,capitalLetters:s=1,smallLetters:a=1,numbers:i=1,symbols:o=1,messages:l={}}=e;let n=r.value,m=(n.match(/[A-Z]/g)||[]).length,d=(n.match(/[a-z]/g)||[]).length,h=(n.match(/\d/g)||[]).length,u=(n.match(/[\W_]/g)||[]).length;n.length<t&&(this.addError(r,l.minLength||`Password must be at least ${t} characters`),this.applyErrorStyle(r)),m<s&&(this.addError(r,l.capitalLetters||`Password must contain at least ${s} capital letter(s)`),this.applyErrorStyle(r)),d<a&&(this.addError(r,l.smallLetters||`Password must contain at least ${a} small letter(s)`),this.applyErrorStyle(r)),h<i&&(this.addError(r,l.numbers||`Password must contain at least ${i} number(s)`),this.applyErrorStyle(r)),u<o&&(this.addError(r,l.symbols||`Password must contain at least ${o} symbol(s)`),this.applyErrorStyle(r))}addError(r,e){this.errors[r.name]=e}clearErrors(){this.errors={}}applyErrorStyle(r){r.classList.add("formGuard_error-field")}showErrors(){for(const r in this.errors){const e=this.form.querySelector(`[name="${r}"]`),t=document.createElement("div");t.classList.add("formGuard_error-message"),t.textContent=this.errors[r];const s=e.dataset.errorPlacement||"after";"before"===s?e.parentNode.insertBefore(t,e):("after"===s||"inline"===s)&&e.parentNode.insertBefore(t,e.nextSibling)}}resetForm(){this.form.reset(),this.clearErrorMessages()}clearErrorMessages(){document.querySelectorAll(".formGuard_error-message").forEach((r=>r.remove())),document.querySelectorAll(".formGuard_error-field").forEach((r=>r.classList.remove("formGuard_error-field")))}}