/**
 * FormValidator.js - A lightweight form validation library
 * 
 * Version: 1.0
 * 
 * Note: This is the development version. In production, use the minified version.
 * 
 * Copyright (c) 2024 Jishith MP
 * 
 * This software is released under the MIT License.
 * 
 * *FormValidator.min.js
 * 
 * Author: Jishith MP
 * License: MIT
 */

document.addEventListener("DOMContentLoaded",function(){class FormValidator{constructor(a,b={}){this.form=a,this.options=b,this.errors={}}init(){this.form.addEventListener("submit",a=>{this.c();const b=this.form.querySelectorAll("input,textarea");let c=!0;b.forEach(a=>{a.name||(c=!1)}),this.b(),(!c||Object.keys(this.errors).length>0)&&a.preventDefault()})}b(){this.d();const a=this.form.querySelectorAll("input,textarea");a.forEach(a=>{try{const b=a.dataset.rules?JSON.parse(a.dataset.rules):{};b.required&&!a.value.trim()&&(this.a(a,b.messages?.required||"This field is required"),this.e(a)),"number"===a.type&&""!==a.value.trim()&&(b.min&&a.value<b.min&&(this.a(a,b.messages?.min||`Minimum value is ${b.min}`),this.e(a)),b.max&&a.value>b.max&&(this.a(a,b.messages?.max||`Maximum value is ${b.max}`),this.e(a))),"email"===a.type&&(b.required&&!a.value.trim()?this.a(a,b.messages?.required||"Email is required"):/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(a.value)||this.a(a,b.messages?.invalid||"Please enter a valid email address"),this.e(a)),"password"===a.type&&this.f(a,b.password||{}),"checkbox"===a.type&&b.required&&!Array.from(this.form.querySelectorAll(`input[name="${a.name}"]`)).some(a=>a.checked)&&(this.a(a,b.messages?.required||"At least one option must be selected"),this.e(a)),"text"===a.type||"textarea"===a.tagName.toLowerCase()&&(b.minLength&&a.value.length<b.minLength&&(this.a(a,b.messages?.minLength||`Must be at least ${b.minLength} characters`),this.e(a)),b.maxLength&&a.value.length>b.maxLength&&(this.a(a,b.messages?.maxLength||`Must be no more than ${b.maxLength} characters`),this.e(a))),"url"===a.type&&(b.required&&!a.value.trim()?this.a(a,b.messages?.required||"URL is required"):/^(ftp|http|https):\/\/[^ "]+$/.test(a.value)||this.a(a,b.messages?.invalid||"Please enter a valid URL"),this.e(a)),"radio"===a.type&&b.required&&!Array.from(this.form.querySelectorAll(`input[name="${a.name}"]`)).some(a=>a.checked)&&(this.a(a,b.messages?.required||"Please select an option"),this.e(a))}catch(c){}}),this.g()}f(a,b){const{minLength:c=8,capitalLetters:d=1,smallLetters:e=1,numbers:f=1,symbols:g=1,messages:h={}}=b,i=a.value,j=(i.match(/[A-Z]/g)||[]).length,k=(i.match(/[a-z]/g)||[]).length,l=(i.match(/\d/g)||[]).length,m=(i.match(/[\W_]/g)||[]).length;i.length<c&&(this.a(a,h.minLength||`Password must be at least ${c} characters`),this.e(a)),j<d&&(this.a(a,h.capitalLetters||`Password must contain at least ${d} capital letter(s)`),this.e(a)),k<e&&(this.a(a,h.smallLetters||`Password must contain at least ${e} small letter(s)`),this.e(a)),l<f&&(this.a(a,h.numbers||`Password must contain at least ${f} number(s)`),this.e(a)),m<g&&(this.a(a,h.symbols||`Password must contain at least ${g} symbol(s)`),this.e(a))}a(a,b){this.errors[a.name]=b}d(){this.errors={}}e(a){a.classList.add("error-border"),a.style.borderColor=this.options.errorBorderColor||"red"}g(){this.form.querySelectorAll(".error-message").forEach(a=>a.remove());for(const a in this.errors){const b=this.form.querySelector(`[name="${a}"]`),c=document.createElement("div");c.classList.add("error-message"),c.style.color=this.options.errorMessageColor||"red",c.style.fontSize=this.options.errorMessageFontSize||"0.9rem",c.style.marginBottom=this.options.errorMessageMarginBottom||"7px",c.style.marginTop=this.options.errorMessageMarginTop||"3px",c.innerText=this.errors[a],c.setAttribute("aria-live","assertive"),b.parentNode.insertBefore(c,b.nextSibling)}}c(){document.querySelectorAll(".error-message").forEach(a=>a.remove()),document.querySelectorAll(".error-border").forEach(a=>a.classList.remove("error-border"))}}});