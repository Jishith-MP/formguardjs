class FormValidator{constructor(r,e={}){this.form=r;this.options=e;this.errors={}}init(){this.form.addEventListener("submit",r=>{this.clearErrorMessages();const e=this.form.querySelectorAll("input, textarea");let t=true;e.forEach(r=>{if(!r.name){t=false}});this.validate();if(!t||Object.keys(this.errors).length>0)r.preventDefault()})}validate(){this.clearErrors();const r=this.form.querySelectorAll("input, textarea");r.forEach(r=>{const e=r.dataset.rules?JSON.parse(r.dataset.rules):{};if(e.required&&!r.value.trim()){this.addError(r,e.messages?.required||"This field is required");this.applyErrorStyle(r)}if(r.type==="number"&&r.value.trim()!==""){if(e.min&&r.value<e.min){this.addError(r,e.messages?.min||`Minimum value is ${e.min}`);this.applyErrorStyle(r)}if(e.max&&r.value>e.max){this.addError(r,e.messages?.max||`Maximum value is ${e.max}`);this.applyErrorStyle(r)}}if(r.type==="email"){const t=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(e.required===true&&!r.value.trim()){this.addError(r,e.messages?.required||"Email is required");this.applyErrorStyle(r)}else if(r.value.trim()!==""&&!t.test(r.value)){this.addError(r,e.messages?.invalid||"Please enter a valid email address");this.applyErrorStyle(r)}}if(r.type==="password")this.validatePassword(r,e.password||{});if(r.type==="checkbox"&&e.required){const s=this.form.querySelectorAll(`input[name="${r.name}"]`);const a=Array.from(s).some(r=>r.checked);if(!a){this.addError(r,e.messages?.required||"At least one option must be selected");this.applyErrorStyle(r)}}if(r.type==="text"||r.tagName.toLowerCase()==="textarea"){const i=e.minLength||null;const o=e.maxLength||null;if(r.value.trim()!==""){if(i&&r.value.length<i){this.addError(r,e.messages?.minLength||`Must be at least ${i} characters`);this.applyErrorStyle(r)}if(o&&r.value.length>o){this.addError(r,e.messages?.maxLength||`Must be no more than ${o} characters`);this.applyErrorStyle(r)}}}if(r.type==="url"){const l=/^(ftp|http|https):\/\/[^ "]+$/;if(e.required===true&&!r.value.trim()){this.addError(r,e.messages?.required||"URL is required");this.applyErrorStyle(r)}else if(r.value.trim()!==""&&!l.test(r.value)){this.addError(r,e.messages?.invalid||"Please enter a valid URL");this.applyErrorStyle(r)}}if(r.type==="radio"&&e.required){const n=this.form.querySelectorAll(`input[name="${r.name}"]`);const a=Array.from(n).some(r=>r.checked);if(!a){this.addError(r,e.messages?.required||"Please select an option");this.applyErrorStyle(r)}}});this.showErrors()}validatePassword(r,e){const{minLength:t=8,capitalLetters:s=1,smallLetters:a=1,numbers:i=1,symbols:o=1,messages:l={}}=e;let n=r.value;let m=(n.match(/[A-Z]/g)||[]).length;let d=(n.match(/[a-z]/g)||[]).length;let h=(n.match(/\d/g)||[]).length;let c=(n.match(/[\W_]/g)||[]).length;if(n.length<t){this.addError(r,l.minLength||`Password must be at least ${t} characters`);this.applyErrorStyle(r)}if(m<s){this.addError(r,l.capitalLetters||`Password must contain at least ${s} capital letter(s)`);this.applyErrorStyle(r)}if(d<a){this.addError(r,l.smallLetters||`Password must contain at least ${a} small letter(s)`);this.applyErrorStyle(r)}if(h<i){this.addError(r,l.numbers||`Password must contain at least ${i} number(s)`);this.applyErrorStyle(r)}if(c<o){this.addError(r,l.symbols||`Password must contain at least ${o} symbol(s)`);this.applyErrorStyle(r)}}addError(r,e){this.errors[r.name]=e}clearErrors(){this.errors={}}applyErrorStyle(r){r.classList.add("error-border");const e=this.options.errorBorderColor||"red";r.style.borderColor=e}showErrors(){const r=this.form.querySelectorAll(".error-message");r.forEach(r=>r.remove());for(const e in this.errors){const t=this.form.querySelector(`[name="${e}"]`);const s=document.createElement("div");s.classList.add("error-message");s.style.color=this.options.errorMessageColor||"red";s.style.fontSize=this.options.errorMessageFontSize||"0.9rem";s.style.marginBottom=this.options.errorMessageMarginBottom||"7px";s.style.marginTop=this.options.errorMessageMarginTop||"3px";s.innerText=this.errors[e];s.setAttribute("aria-live","assertive");t.parentNode.insertBefore(s,t.nextSibling)}}clearErrorMessages(){document.querySelectorAll(".error-message").forEach(r=>r.remove());document.querySelectorAll(".error-border").forEach(r=>r.classList.remove("error-border"))}}
